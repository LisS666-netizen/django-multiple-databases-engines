version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  nginx_logs: {}
  letsencrypt_certbot: {}
  letsencrypt_logs: {}

services:
  django: &django
    image: ${CONTAINER_REGISTRY_PREFIX}/${CONTAINER_REGISTRY_REPOSITORY_NAME}:${COMPOSE_PROJECT_NAME}-${SERVICE_DJANGO_BUILD_NAME}-${SERVICE_DJANGO_BUILD_TAG_CALC}
    depends_on:
      - postgres
      - redis
    env_file:
      - django/.env
      - postgres/.env
    command: /uwsgi.sh
    restart: on-failure

  postgres:
    image: mdillon/postgis:10-alpine
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - postgres/.env
    ports:
      - "${SERVICE_POSTGRES_PORT}"
    restart: always

  nginx:
    image: ${CONTAINER_REGISTRY_PREFIX}/${CONTAINER_REGISTRY_REPOSITORY_NAME}:${COMPOSE_PROJECT_NAME}-${SERVICE_NGINX_BUILD_NAME}-${SERVICE_NGINX_BUILD_TAG_CALC}
    volumes:
      - letsencrypt_certbot:/etc/letsencrypt
      - nginx_logs:/etc/nginx/logs
    depends_on:
      - django
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
      - "8080:8080"
    env_file:
      - nginx/.env
    restart: on-failure

  certbot:
    image: certbot/certbot
    volumes:
      - letsencrypt_certbot:/etc/letsencrypt
      - letsencrypt_logs:/var/log/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    command: certonly --standalone --expand --non-interactive --agree-tos --email=${SERVICE_CERTBOT_EMAIL} ${SERVICE_CERTBOT_DOMAINS}

  redis:
    image: redis:3.2
    restart: always

  celeryworker:
    <<: *django
    depends_on:
     - postgres
     - redis
    command: /start-celeryworker.sh
    restart: on-failure

  celerybeat:
    <<: *django
    depends_on:
      - postgres
      - redis
    command: /start-celerybeat.sh
    restart: on-failure

  flower:
    <<: *django
    ports:
    - "5555:5555"
    depends_on:
      - redis
    command: /start-flower.sh
    restart: on-failure

